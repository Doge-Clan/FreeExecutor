window.addEventListener("beforeunload", function(e) {
    e.preventDefault()
    console.warning("An unload was attempted on FreeExecutor!")
    return 'no u';
});
var currstring = "";
var tmp = "";

function freeScreen7219_() {
    document.head.innerHTML = "";
    document.body.innerHTML = "";
}
function boot2fe(){
 if(localStorage.getItem('/AUTOLOAD/BOOT.lnk')===null){
  let _prm=prompt('Please input the .FEBIN to autoboot');
  if(_prm===null){
    alert('No .FEBIN Listed.');
    return 0;
  }
  localStorage.setItem('/AUTOLOAD/BOOT.lnk',_prm);
 }
 // Exec_ Laziness (Hopefully won't cause an exploit)
 currstring=localStorage.getItem('/AUTOLOAD/BOOT.lnk');
 exec_();
} // Autoboot a .LNK VFS File
function exec_() {
    if (currstring.includes(".FEBIN")) {
        if (tmp = localStorage.getItem(currstring), null === tmp) return tmp = "", alert("No .FEBIN Was Found under this name."), 2; // Minified Null Checker? WTF?
        document.body.removeEventListener("keydown", keyMGR192B_); // Fix an unload glitch for apps that don't use any of the API
        eval(tmp);
        console.log(".FEBIN Executed."); 
        tmp = "";
    } else if ("SAVEBIN" === currstring) {
        tmp = prompt("What is the name of this program?")
        if(tmp.includes(".FEBIN")===false) {
           tmp += ".FEBIN"
        }
        if(tmp.includes("/BIN/")===false) {
          tmp = "/BIN/"+tmp; // Update to 0.1.1 FS Format
        }
        let e = prompt("Please paste the minified FEBIN Contents to save.");
        localStorage.setItem(tmp, e);
        tmp = "";
    } else if ("BOOT2FE" === currstring) {
        boot2fe(); // You can call boot2fe :P
    } else if ("PATCHFS" === currstring) {
        alert("Please wait while the Filesystem is being updated to (0.1.1)+ format...")
        for (var a in localStorage) {
         if(a.includes("/BIN/")!==true&&a.includes("function")===false){
           localStorage.setItem("/BIN/"+a,localStorage[a])
           localStorage.removeItem(a);
           console.log('Fixed bad file '+a);
         } // Has weird override bug but is hasn't done anything bad yet.
        }
    } else {
      alert("Unknown Command"); // What else did you expect?
    }
}

function S15D2_() {
    document.getElementById("terminal").innerHTML = currstring;
} // Function to save some time because I call this a lot in my half baked key manager 

function keyMGR192B_(e) {
    var t; // keyNumber
    if (e.which) {
        // KeyManagement (Minifier helped fix my code sorta???)
        if (8 === (t = e.which)) return tmp = currstring.slice(0, -1), currstring = tmp, S15D2_(), tmp = "", 0; // Backspace :P
        if (t >= 16 && t <= 18 || t >= 37 && t <= 40 || 27 === t) return 0;
        if (13 === t) return exec_(currstring), currstring = "", S15D2_(), 1;
        if (190 === t) return currstring += ".", S15D2_(), 0;
        if (191 === t) return currstring += "/", S15D2_(), 0
    }
    currstring += String.fromCharCode(t)
    document.getElementById("terminal").innerHTML += String.fromCharCode(t)
}

function shell16A3_() {
    document.body.id = "_shell";
    document.head.innerHTML += "<title>FreeExecutor 0.1.1 Shell</title><style>body{background:rgb(20,20,40);color:white;font-family:monospace;font-size:14px;overflow:hidden;min-height:100vh;}</style>"; 
    document.body.innerHTML += '<span id="_bootmark"> FreeExecutor 0.1.1 <br> (C) 2021 Doge Clan, All Rights Reserved <br> <br> </span>> <span id="terminal"></span> ';
    document.getElementById("_shell");
    document.body.addEventListener("keydown", keyMGR192B_)
}

function init_() {
    freeScreen7219_()
    if(localStorage.getItem('/AUTOLOAD/BOOT.lnk')!==null) {
      boot2fe();
    } // Check if we can boot to a .FEBIN file (This can help with many things)
    shell16A3_()
}
init_();
